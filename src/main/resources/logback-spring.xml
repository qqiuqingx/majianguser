<?xml version="1.0" encoding="UTF-8"?>
<configuration>
<!--    //日志保存地址，相对路径当前项目logs文件夹下面-->
    <property name="LOG_HOME" value="./logs" />
    <!-- 控制台打印日志的相关配置 -->
   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
         <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
      </encoder>
   </appender>

    <!-- 每天产生一个文件 -->
  <!--  <springProfile >-->

       <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
            r<!--ollingPolicy标签指定日志分包策略，TimeBasedRollingPolicy类实现的是基于时间的分包策略，分包间隔是根据fileNamePattern中指定的事件最小单位&ndash;&gt;
            ${logPath}/info.%d{yyyy-MM-dd}.log  他的触发方式为一天，略在每次想日志中添加新内容时触发，如果满足条件，就将springboot.log复制到logs/目录并更名为
            springbootinfo-2019-10-09_13-13.log，并删除原springboot.log。-->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
               <!--  日志文件输出得文件名称 -->
                <fileNamePattern>${LOG_HOME}/springbootinfo.%d{yyyy-MM-dd }.log</fileNamePattern>
            <!--   日志文件保留天数 -->
                <MaxHistory>30</MaxHistory>
            </rollingPolicy>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>${PATTERN}</pattern>
            </layout>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <!--格式化输出:%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            </encoder>
            <!--日志文件最大的大小-->
            <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy>
        </appender>

        <root level="info">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="FILE" />
        </root>



</configuration>
